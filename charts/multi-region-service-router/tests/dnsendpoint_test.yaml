suite: dnsendpoint template tests
templates:
  - dnsendpoint.yaml
release:
  name: test-release
  namespace: default
tests:
  - it: should create DNSEndpoint resources for each external DNS controller
    values:
      - ./values/dnsendpoint-basic-values.yaml
    asserts:
      - isKind:
          of: DNSEndpoint
        documentIndex: 0
      - equal:
          path: metadata.name
          value: external-dns-neu
        documentIndex: 0
      - equal:
          path: metadata.labels["app"]
          value: external-dns-neu
        documentIndex: 0
      - isKind:
          of: DNSEndpoint
        documentIndex: 1
      - equal:
          path: metadata.name
          value: external-dns-weu
        documentIndex: 1
      - equal:
          path: metadata.labels["app"]
          value: external-dns-weu
        documentIndex: 1
      - matchRegex:
          path: spec.endpoints[0].dnsName
          pattern: service-01-ns-d-dev-app-01.aks.example.com
        documentIndex: 0
      - matchRegex:
          path: spec.endpoints[0].targets[0]
          pattern: aks01-neu-external.aks.example.com
        documentIndex: 0

  - it: should handle regionbound services correctly
    values:
      - ./values/dnsendpoint-regionbound-values.yaml
    asserts:
      # First check that controllers are correctly created
      - isKind:
          of: DNSEndpoint
        documentIndex: 0
      - equal:
          path: metadata.name
          value: external-dns-neu
        documentIndex: 0
      - isKind:
          of: DNSEndpoint
        documentIndex: 1
      - equal:
          path: metadata.name
          value: external-dns-weu
        documentIndex: 1
        
      # According to template logic:
      # - Apps with region=neu (matching cluster) will appear in ALL controllers
      # - Apps with region≠neu (not matching cluster) will NOT appear in any controller
      
      # Verify NEU controller has the NEU app record (since app region matches cluster region)
      - matchRegex:
          path: spec.endpoints[0].dnsName
          pattern: service-01-ns-d-dev-app-01.aks.example.com
        documentIndex: 0
        
      # Verify WEU controller also has the NEU app record
      - matchRegex:
          path: spec.endpoints[0].dnsName
          pattern: service-01-ns-d-dev-app-01.aks.example.com
        documentIndex: 1
        
      # Verify service-02 (WEU) is NOT in either controller (since region≠cluster region)
      # We can verify this by checking that there's only 1 endpoint in each controller
      - lengthEqual:
          path: spec.endpoints
          count: 1
        documentIndex: 0
      - lengthEqual:
          path: spec.endpoints
          count: 1
        documentIndex: 1

  - it: should handle regionbound services with different cluster region
    values:
      - ./values/dnsendpoint-regionbound-weu-values.yaml
    asserts:
      # First check that controllers are correctly created
      - isKind:
          of: DNSEndpoint
        documentIndex: 0
      - equal:
          path: metadata.name
          value: external-dns-neu
        documentIndex: 0
      - isKind:
          of: DNSEndpoint
        documentIndex: 1
      - equal:
          path: metadata.name
          value: external-dns-weu
        documentIndex: 1
        
      # According to template logic:
      # - Apps with region=weu (matching cluster) will appear in ALL controllers
      # - Apps with region≠weu (not matching cluster) will NOT appear in any controller
      
      # Verify NEU controller has the WEU app record
      - matchRegex:
          path: spec.endpoints[0].dnsName
          pattern: service-02-ns-d-dev-app-02.aks.example.com
        documentIndex: 0
        
      # Verify WEU controller also has the WEU app record
      - matchRegex:
          path: spec.endpoints[0].dnsName
          pattern: service-02-ns-d-dev-app-02.aks.example.com
        documentIndex: 1
        
      # Verify service-01 (NEU) is NOT in either controller (since region≠cluster region)
      # We can verify this by checking that there's only 1 endpoint in each controller
      - lengthEqual:
          path: spec.endpoints
          count: 1
        documentIndex: 0
      - lengthEqual:
          path: spec.endpoints
          count: 1
        documentIndex: 1
        
  - it: should use custom gateway settings when specified
    values:
      - ./values/dnsendpoint-custom-gateway-values.yaml
    asserts:
      - matchRegex:
          path: spec.endpoints[0].dnsName
          pattern: service-01-ns-d-dev-app-01.aks.example.com
        documentIndex: 0
      - matchRegex:
          path: spec.endpoints[0].targets[0]
          pattern: aks01-neu-internal.aks.example.com
        documentIndex: 0
